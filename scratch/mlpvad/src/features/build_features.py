"""
This module provides a way to get the data from the raw directory and present it
as features for entry into the models. Its main API is the generate_data function.
"""
import audiosegment
import enum

class ClassLabels(enum.Enum):
    NO_VOICE = 0
    VOICE = 1

def generate_data(samples_per_vector=1024, sampling_frequency_hz=32000, sample_width=2, channels=1):
    """
    Generates tuples of the form (input_vector, class_label) indefinitely.

    The input_vectors that are generated by this function are simply samples_per_vector samples taken sequentially from
    wav files at random (without replacement until all wav files are used).

    So the general steps are this:
    - Get a wav file from the data repository along with its label.
    - Resample the file to the given properties (does not alter the original file).
    - Until the resampled file has run out of samples, read out samples_per_vector samples from it sequentially
      and pack them up into a tuple with the label.

    :param samples_per_vector: The size of the input_vector.
    :param sampling_frequency: The raw wav file will be read in and resampled to this frequency.
    :param sample_width: The raw wav file will be read in and resampled using this number of bytes per sample.
    :param channels: The raw wav file will be read in and resampled to this number of channels.
    :returns: Tuple of the form (input_vector, class_label)
    """
